if (IMGU_EXAMPLES)
  add_executable (imguMerge imguMerge.c)
  target_link_libraries (imguMerge imgu)
  install(TARGETS imguMerge RUNTIME DESTINATION ${IMGU_BIN})

  add_executable (imguMake8bits imguMake8bits.c)
  target_link_libraries (imguMake8bits imgu)
  install(TARGETS imguMake8bits RUNTIME DESTINATION ${IMGU_BIN})

  add_executable (imguMinGray imguMinGray.c)
  target_link_libraries (imguMinGray imgu)
  install(TARGETS imguMinGray RUNTIME DESTINATION ${IMGU_BIN})

#
# imguPaint: exemple de modification d'une image dans un viewer
#
# ** mettre a jour pour nouveau IView **
#
#  if(BMC_FOUND AND OSG_FOUND AND IMGU_EXTRA)
#    add_executable (imguPaint imguPaint.cpp)
#    target_link_libraries (imguPaint imgu)
#    install(TARGETS imguPaint RUNTIME DESTINATION ${IMGU_BIN})
#    if(IMGU_LIB_8)
#      add_executable (imguPaint8 imguPaint.cpp)
#      target_link_libraries (imguPaint8 imgu8)
#      install(TARGETS imguPaint8 RUNTIME DESTINATION ${IMGU_BIN})
#      set_target_properties(imguPaint8 PROPERTIES COMPILE_DEFINITIONS IMGU8)
#    endif()
#  endif()

  if(BMC_FOUND)
    if(RQUEUE_FOUND)
      add_executable (imguGimpView imguGimpView.c)
      target_link_libraries (imguGimpView imgu)
      install(TARGETS imguGimpView RUNTIME DESTINATION ${IMGU_BIN})
    endif()
  endif()

  add_executable (imguInterpolate imguInterpolate.c)
  target_link_libraries (imguInterpolate imgu)
  add_executable (imguCanny imguCanny.c)
  target_link_libraries (imguCanny imgu)
  add_executable (imguComplex imguComplex.c)
  target_link_libraries (imguComplex imgu)
  add_executable (imguFit imguFit.c)
  target_link_libraries (imguFit imgu)
  add_executable (imguSift imguSift.c)
  target_link_libraries (imguSift imgu)
  add_executable (imguInfo imguInfo.c)
  target_link_libraries (imguInfo imgu)
  add_executable (imguJoin imguJoin.c)
  target_link_libraries (imguJoin imgu)
  add_executable (imguSplit imguSplit.c)
  target_link_libraries (imguSplit imgu)
  add_executable (imguIRIC imguIRIC.c)
  target_link_libraries (imguIRIC imgu)
  #add_executable (imgustreamv4l2 imgustreamv4l2.c)
  #target_link_libraries (imgustreamv4l2 imgu)

  #install(TARGETS imgustreamv4l2 RUNTIME DESTINATION ${IMGU_BIN})
  install(TARGETS imguSift RUNTIME DESTINATION ${IMGU_BIN})
  install(TARGETS imguSplit RUNTIME DESTINATION ${IMGU_BIN})
  install(TARGETS imguInfo RUNTIME DESTINATION ${IMGU_BIN})
  install(TARGETS imguJoin RUNTIME DESTINATION ${IMGU_BIN})
  install(TARGETS imguIRIC RUNTIME DESTINATION ${IMGU_BIN})

  add_executable (imguSiftMatch imguSiftMatch.c)
  target_link_libraries (imguSiftMatch imgu)

  ### test plugin
  if (RQUEUE_FOUND)
    add_executable (imguTestPlugin imguTestPlugin.c)
    target_link_libraries (imguTestPlugin imgu)
    install(TARGETS imguTestPlugin RUNTIME DESTINATION ${IMGU_BIN})
    if(IMGU_LIB_8)
      add_executable (imguTestPlugin8 imguTestPlugin.c)
      target_link_libraries (imguTestPlugin8 imgu8)
      install(TARGETS imguTestPlugin8 RUNTIME DESTINATION ${IMGU_BIN})
      set_target_properties(imguTestPlugin8 PROPERTIES COMPILE_DEFINITIONS IMGU8)
    endif()


    add_executable (imguVideoTile imguVideoTile.c tileinfo.c)
    target_link_libraries (imguVideoTile imgu)
    install(TARGETS imguVideoTile RUNTIME DESTINATION ${IMGU_BIN})
    if(IMGU_LIB_8)
      add_executable (imguVideoTile8 imguVideoTile.c tileinfo.c)
      target_link_libraries (imguVideoTile8 imgu8)
      install(TARGETS imguVideoTile8 RUNTIME DESTINATION ${IMGU_BIN})
      set_target_properties(imguVideoTile8 PROPERTIES COMPILE_DEFINITIONS IMGU8)
    endif()

    #add_executable (imguDiapoSubtitle imguDiapoSubtitle.c)
    #target_link_libraries (imguDiapoSubtitle imgu)
    #install(TARGETS imguDiapoSubtitle RUNTIME DESTINATION ${IMGU_BIN})
    if(IMGU_LIB_8)
      add_executable (imguDiapoSubtitle8 imguDiapoSubtitle.c)
      target_link_libraries (imguDiapoSubtitle8 imgu8)
      install(TARGETS imguDiapoSubtitle8 RUNTIME DESTINATION ${IMGU_BIN})
      set_target_properties(imguDiapoSubtitle8 PROPERTIES COMPILE_DEFINITIONS IMGU8)
    endif()

    add_executable (imguVideoPlayer imguVideoPlayer.c)
    target_link_libraries (imguVideoPlayer imgu)
    install(TARGETS imguVideoPlayer RUNTIME DESTINATION ${IMGU_BIN})
    if(IMGU_LIB_8)
      add_executable (imguVideoPlayer8 imguVideoPlayer.c)
      target_link_libraries (imguVideoPlayer8 imgu8)
      install(TARGETS imguVideoPlayer8 RUNTIME DESTINATION ${IMGU_BIN})
      set_target_properties(imguVideoPlayer8 PROPERTIES COMPILE_DEFINITIONS IMGU8)
    endif()

    add_executable (imguFASexpo imguFASexpo.c)
    target_link_libraries (imguFASexpo imgu)
    install(TARGETS imguFASexpo RUNTIME DESTINATION ${IMGU_BIN})

    if(IMGU_LIB_8)
      add_executable (imguDoubleCapture imguDoubleCapture.c)
      target_link_libraries (imguDoubleCapture imgu8)
      install(TARGETS imguDoubleCapture RUNTIME DESTINATION ${IMGU_BIN})
      set_target_properties(imguDoubleCapture PROPERTIES COMPILE_DEFINITIONS IMGU8)
    endif()

    ### test load/save plugin
    add_executable (imguTestLoadSave imguTestLoadSave.c)
    target_link_libraries (imguTestLoadSave imgu)
    install(TARGETS imguTestLoadSave RUNTIME DESTINATION ${IMGU_BIN})
    if(IMGU_LIB_8)
      add_executable (imguTestLoadSave8 imguTestLoadSave.c)
      target_link_libraries (imguTestLoadSave8 imgu8)
      install(TARGETS imguTestLoadSave8 RUNTIME DESTINATION ${IMGU_BIN})
      set_target_properties(imguTestLoadSave8 PROPERTIES COMPILE_DEFINITIONS IMGU8)
    endif()

    ### test snapshot plugin
    add_executable (imguTestSnapshotFilter imguTestSnapshotFilter.c)
    target_link_libraries (imguTestSnapshotFilter imgu)
    install(TARGETS imguTestSnapshotFilter RUNTIME DESTINATION ${IMGU_BIN})

    ### test camera plugin
    add_executable (imguTestCamera imguTestCamera.c)
    target_link_libraries (imguTestCamera imgu)
    install(TARGETS imguTestCamera RUNTIME DESTINATION ${IMGU_BIN})
    if(IMGU_LIB_8)
      add_executable (imguTestCamera8 imguTestCamera.c)
      target_link_libraries (imguTestCamera8 imgu8)
      install(TARGETS imguTestCamera8 RUNTIME DESTINATION ${IMGU_BIN})
      set_target_properties(imguTestCamera8 PROPERTIES COMPILE_DEFINITIONS IMGU8)
    endif()
  endif()

  ### test push broom

  if(RQUEUE_FOUND)
    add_executable (imguPushBroom imguPushBroom.c)
    target_link_libraries (imguPushBroom imgu)
    install(TARGETS imguPushBroom RUNTIME DESTINATION ${IMGU_BIN})
    if(IMGU_LIB_8)
      add_executable (imguPushBroom8 imguPushBroom.c)
      target_link_libraries (imguPushBroom8 imgu8)
      install(TARGETS imguPushBroom8 RUNTIME DESTINATION ${IMGU_BIN})
      set_target_properties(imguPushBroom8 PROPERTIES COMPILE_DEFINITIONS IMGU8)
    endif()
  endif()

  ### test camera plugin + pan-tilt

  if(PT_FOUND)
	add_executable (imguCameraPanTilt imguCameraPanTilt.c)
  	target_link_libraries (imguCameraPanTilt imgu pt)
    install(TARGETS imguCameraPanTilt RUNTIME DESTINATION ${IMGU_BIN})
    if(IMGU_LIB_8)
      add_executable (imguCameraPanTilt8 imguCameraPanTilt.c)
      target_link_libraries (imguCameraPanTilt8 imgu8)
      install(TARGETS imguCameraPanTilt8 RUNTIME DESTINATION ${IMGU_BIN})
      set_target_properties(imguCameraPanTilt8 PROPERTIES COMPILE_DEFINITIONS IMGU8)
    endif()
  endif()

  ### test multiple camera plugin
  if(RQUEUE_FOUND)
    add_executable (imguTestMultiCam imguTestMultiCam.c)
    target_link_libraries (imguTestMultiCam imgu)
    install(TARGETS imguTestMultiCam RUNTIME DESTINATION ${IMGU_BIN})
    if(IMGU_LIB_8)
      add_executable (imguTestMultiCam8 imguTestMultiCam.c)
      target_link_libraries (imguTestMultiCam8 imgu8)
      install(TARGETS imguTestMultiCam8 RUNTIME DESTINATION ${IMGU_BIN})
      set_target_properties(imguTestMultiCam8 PROPERTIES COMPILE_DEFINITIONS IMGU8)
    endif()

    ### test group plugin

    add_executable (imguGrabFoeCamera imguGrabFoeCamera.c)
    target_link_libraries (imguGrabFoeCamera imgu)
    install(TARGETS imguGrabFoeCamera RUNTIME DESTINATION ${IMGU_BIN})

    add_executable (imguTestGroupCam imguTestGroupCam.c)
    target_link_libraries (imguTestGroupCam imgu)
    install(TARGETS imguTestGroupCam RUNTIME DESTINATION ${IMGU_BIN})
    if(IMGU_LIB_8)
      add_executable (imguTestGroupCam8 imguTestGroupCam.c)
      target_link_libraries (imguTestGroupCam8 imgu8)
      install(TARGETS imguTestGroupCam8 RUNTIME DESTINATION ${IMGU_BIN})
      set_target_properties(imguTestGroupCam8 PROPERTIES COMPILE_DEFINITIONS IMGU8)
    endif()
  endif()

  ### test deinterlace

  if (RQUEUE_FOUND)
    add_executable (imguTestDeinterlace imguTestDeinterlace.c)
    target_link_libraries (imguTestDeinterlace imgu)
    install(TARGETS imguTestDeinterlace RUNTIME DESTINATION ${IMGU_BIN})
    if(IMGU_LIB_8)
      add_executable (imguTestDeinterlace8 imguTestDeinterlace.c)
      target_link_libraries (imguTestDeinterlace8 imgu8)
      install(TARGETS imguTestDeinterlace8 RUNTIME DESTINATION ${IMGU_BIN})
      set_target_properties(imguTestDeinterlace8 PROPERTIES COMPILE_DEFINITIONS IMGU8)
    endif()
  endif()

  ### test create image

  add_executable (imguTestCreate imguTestCreate.c)
  target_link_libraries (imguTestCreate imgu)
  install(TARGETS imguTestCreate RUNTIME DESTINATION ${IMGU_BIN})
  if(IMGU_LIB_8)
    add_executable (imguTestCreate8 imguTestCreate.c)
    target_link_libraries (imguTestCreate8 imgu8)
    set_target_properties(imguTestCreate8 PROPERTIES COMPILE_DEFINITIONS IMGU8)
    install(TARGETS imguTestCreate8 RUNTIME DESTINATION ${IMGU_BIN})
  endif()

  ## test capture image

#  add_executable (imguTestCapture imguTestCapture.c)
#  target_link_libraries (imguTestCapture imgu)
#  install(TARGETS imguTestCapture RUNTIME DESTINATION ${IMGU_BIN})

#  if(IMGU_LIB_8)
#    add_executable (imguTestCapture8 imguTestCapture.c)
#    target_link_libraries (imguTestCapture8 imgu8)
#    set_target_properties(imguTestCapture8 PROPERTIES COMPILE_DEFINITIONS IMGU8)
#    install(TARGETS imguTestCapture8 RUNTIME DESTINATION ${IMGU_BIN})
#  endif()

#  if(BMC_FOUND)
#    add_executable (imguStream imguStream.c)
#    target_link_libraries (imguStream imgu)
#    install(TARGETS imguStream RUNTIME DESTINATION ${IMGU_BIN})
#  endif()

#  if(PTHREAD_FOUND)
#    add_executable (imguCapture imguCapture.c)
#    target_link_libraries (imguCapture imgu)
#    install(TARGETS imguCapture RUNTIME DESTINATION ${IMGU_BIN})
#  endif()



  if(IMGU_EXTRA)
    if(OSG_FOUND)
      if (RQUEUE_FOUND)
        add_executable (imgupointpick imgupointpick.cpp)
        target_link_libraries (imgupointpick imgu)
        install(TARGETS imgupointpick RUNTIME DESTINATION ${IMGU_BIN})

        add_executable (imguview imguview.cpp)
        target_link_libraries (imguview imgu)
        install(TARGETS imguview RUNTIME DESTINATION ${IMGU_BIN})

        if (LIBLO_FOUND)
          add_executable (imguviewosc imguviewosc.cpp)
          target_link_libraries (imguviewosc imgu ${LIBLO_LIBRARIES})
          install(TARGETS imguviewosc RUNTIME DESTINATION ${IMGU_BIN})
        endif()

        if(IMGU_LIB_8)
          add_executable (imguview8 imguview.cpp)
          target_link_libraries (imguview8 imgu8)
          set_target_properties(imguview8 PROPERTIES COMPILE_DEFINITIONS IMGU8)
          install(TARGETS imguview8 RUNTIME DESTINATION ${IMGU_BIN})

          if (LIBLO_FOUND)
            add_executable (imguviewosc8 imguviewosc.cpp)
            target_link_libraries (imguviewosc8 imgu8 ${LIBLO_LIBRARIES})
            set_target_properties(imguviewosc8 PROPERTIES COMPILE_DEFINITIONS IMGU8)
            install(TARGETS imguviewosc8 RUNTIME DESTINATION ${IMGU_BIN})
          endif()

        endif()
      endif()

      if(OpenCV_FOUND)
        if(OSG_FOUND)
          if (RQUEUE_FOUND)
            add_executable (imgucalib imgucalib.c)
            target_link_libraries (imgucalib imgu)
            install(TARGETS imgucalib RUNTIME DESTINATION ${IMGU_BIN})
            if(IMGU_LIB_8)
              add_executable (imgucalib8 imgucalib.c)
              target_link_libraries (imgucalib8 imgu8)
              set_target_properties(imgucalib8 PROPERTIES COMPILE_DEFINITIONS IMGU8)
              install(TARGETS imgucalib8 RUNTIME DESTINATION ${IMGU_BIN})
            endif()
          endif()
        endif()
      endif()

      if(PROFILER_FOUND)
        if (RQUEUE_FOUND)
          add_executable (imguTestGPU imguTestGPU.cpp)
          target_link_libraries (imguTestGPU imgu profiler)
          install(TARGETS imguTestGPU RUNTIME DESTINATION ${IMGU_BIN})
          if(IMGU_LIB_8)
            add_executable (imguTestGPU8 imguTestGPU.cpp)
            target_link_libraries (imguTestGPU8 imgu8)
            set_target_properties(imguTestGPU8 PROPERTIES COMPILE_DEFINITIONS IMGU8)
            install(TARGETS imguTestGPU8 RUNTIME DESTINATION ${IMGU_BIN})
          endif()
          add_executable (imguEclairage imguEclairage.cpp)
          target_link_libraries (imguEclairage imgu profiler)
          install(TARGETS imguEclairage RUNTIME DESTINATION ${IMGU_BIN})
        endif()
      endif()

#      add_executable (imguViewer imguViewer.cpp)
#      target_link_libraries (imguViewer imgu)
#      install(TARGETS imguViewer RUNTIME DESTINATION ${IMGU_BIN})
#      if(IMGU_LIB_8)
#        add_executable (imguViewer8 imguViewer.cpp)
#        target_link_libraries (imguViewer8 imgu8)
#        set_target_properties(imguViewer8 PROPERTIES COMPILE_DEFINITIONS IMGU8)
#        install(TARGETS imguViewer8 RUNTIME DESTINATION ${IMGU_BIN})
#      endif()

#     add_executable (scanner scanner.cpp)
#     target_link_libraries (scanner imgu imguextra)

#     add_executable (scannerdell scannerdell.cpp)
#     target_link_libraries (scannerdell imgu imguextra)

#     add_executable (imguFFT imguFFT.cpp ImageViews.cpp IView.cpp pickmanager.cpp keymanager.cpp)
#     target_link_libraries (imguFFT imgu ${OSG_LIBS})
#     add_executable (imguViewer imguViewer.cpp ImageViews.cpp IView.cpp pickmanager.cpp keymanager.cpp)
#     target_link_libraries (imguViewer imgu ${OSG_LIBS})
#     add_executable (imguSee imguSee.cpp base.cpp ImageViews.cpp IView.cpp pickmanager.cpp keymanager.cpp)
#     target_link_libraries (imguSee imgu ${OSG_LIBS})
#     add_executable (imguOptimizePose imguOptimizePose.cpp ImageViews.cpp IView.cpp pickmanager.cpp keymanager.cpp)
#     target_link_libraries (imguOptimizePose imgu ${OSG_LIBS})

#     install(TARGETS imguSee RUNTIME DESTINATION ${IMGU_BIN})
#     install(TARGETS imguOptimizePose RUNTIME DESTINATION ${IMGU_BIN})
    endif(OSG_FOUND)
  endif(IMGU_EXTRA)
endif(IMGU_EXAMPLES)


